# -*- coding: utf-8 -*-
"""day-1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1RcnV8zqLo7DbGx1-M1Y42HfjTAvv7mhJ
"""



"""## 1. Printing Out"""

print("Hello World")

print('Hello World')

print(Hello World)

print(5)

print(5.4)

print(True)

print(1,"Hello",6.7,True)

print(1,2,3,4, sep='/')

print(1,2,3,4,5, sep='-')

print("Hello", end="                         ")
print("World")

"""## 2. Data Types"""

# 9 Data Types

# 1. int
# 2. float
# 3. String
# 4. Boolean
# 5. Complex
# 6. List
# 7. Tuples
# 8. Sets
# 9. Dictionary

# Int

print(4)

# Float

print(4.5)

# Strings

print("Salman Khan")

# Boolean

print(True)
print(False)

# Complex

print(3+4j)

# List

print([1,2,3,4,5])

# Tuple

print((1,2,3,4,5))

# Sets

print({1,2,3,4,5})

# Dictionary

print({"Name":"Rahul", "Age":34})



"""## 3. Detecting Data Types"""

type(4)

type(4+5j)

type((1,2,3,4,5))

"""## 4. Taking user input"""

input("Enter your age below")

"""## 5. Variables

- Dynamic Typing
- Dynamic Binding
"""

a=5

print(a)

y='Kolkata'
print(y)

# Dynamic Binding

a=4

print(a)

a='Kolkata'

print(a)

"""## 6. Type Conversion"""

# Converting one data type to another

first=input('Enter 1st number')
second=input('Enter 2nd number')

print(first)
print(second)

print(first + second)

type(first)

type(second)

int(4.5)

int('4')

int('Kolkata')

float(4)

str(4)

complex(5)

list("Delhi")

print(first + second)

print(int(first) + int(second))

# Type Conversion

# 1. Explicit Type Conversion
# 2. Implicit Type Conversion

print(4 + 5.6)

"""## 7. Keywords and Identifiers"""

# Keywords

# Keywords are reserved words by the compiler/interpreter

# Identifiers

# Names given by the programmer in a program(variable name, function name, Class name)

# Rules

# 1. Identifiers can not start with a digit
# 2. You can only use _ as a special chars
# 3. Identifiers!= Keywords

"""## 8. Literals"""

# Literals values assigned to a variable

a=2

# 2  is the Literal

a=0b0110
print(a)

a=0xff
print(a)

a=1.2e3 # 1.2 * 10^3
print(a)

a=1.2e-3
print(a)

x=None
print(x)

z=None

print(z)

x=False + 4
print(x)

"""## 9. Operators

- Arithmetic
- Comparison
- Logical
- Bitwise
- Assignment
- Membership
"""

# Arithmetic

print(2+3)
print(4-3)
print(4*3)
print(5/2)

print(3%2)
print(4**2)
print(5//2)

# Comparison/Relational

print(3>2)
print(4<2)
print(3<=3)
print(4>=2)
print(3==3)
print(3!=2)

# Logical Operators

print(1 and 0)
print(1 or 0)
print(not 0)

# Bitwise

print(2 | 3)

print(2 & 3)

#010
#011
#---
#001

print(2 ^ 3)

print(6>>2)

print(1<<5)

print(~2)

# Assignment

a=2

a=a+2

a+=2

print(a)

a**=2 # a=a**2
print(a)

# a++
# ++a

# Membership Operators

'K' in 'Kolkata'

'X' in 'Kolkata'

1 in [1,2,3,4,5,6]

1 not in [1,2,3,4,5,6]

"""## 10. If-else statements"""

# correct email abc@gmail.com
# correct password 1234

email=input("Enter your email")
password=input("Enter your password")

if email=="abc@gmail.com" and password=="1234":
  print("welcome")
elif email=="abc@gmail.com" and password!="1234":
  print("Incorrect password")
  password=input("Enter your password again")
  if password=="1234":
    print("Welcome finally")
  else:
    print("Still incorrect")
else:
  print("Incorrect! try again")

"""## 11. Loops

- While
- For
"""

# While loop

i=1

while i<11:
  print(i)
  i=i+1

# For loop

for i in range(1,11):
  print(i)

# Iterator

for i in range(1,11,3):
  print(i)

for i in range(10,0,-1):
  print(i)

for i in "Kolkata":
  print(i)

for i in [1,2,3,4,5]:
  print(i)

for i in "Delhi":
  print("Goa")

"""## 12. Importing Libraries"""

# include <math.h>

import math

math.factorial(4)

import random

random.randint(1,10)

import random

jackpot=random.randint(1,100)

guess=int(input("Chal guess kar"))
counter=1

while guess!=jackpot:

  if guess<jackpot:
    print("Galat hai. Guess higher")
  else:
    print("Galat hai. Guess lower")

  guess=int(input("chal dobara guess kar"))
  counter=counter+1

# Nothing here
print("Sahi hai")
print("You took",counter)

"""## 13. Break and Continue"""

for j in range(1,3):
  for i in range(1,11):
    if i==3:
      break
    print(i)

# Where would you use break statment

# Linear Searching

for i in range(1,11):
  if i==5:
    continue
  print(i)

products={"Redmi 5":"OS","Redmi 6":"IS","Redmi 7":"IS","Redmi 8":"OS"}

for i in products:
  if products[i]=='OS':
    continue
  print(i)

# pass statement

for i in range(1,11):
  pass

"""## 14. Strings

- Create
- Access
- Edit
- Delete
- operations
- Functions
"""

# Creating

#str1=""
#str2='Kolkata'
#str3="Kolkata"
str4='''Kolkata'''
str5="""Kolkata"""
str6='''
This is a
multiline
string
'''

str7="It's a rainy day"
print(str7)

# Access String

city

city='Kolkata'
city

# Indexing
# Slicing

# Editing

city[0]='X'
city

# Immutable data type

# No editing possible

# Deletion

city

del city

city

city='Mumbai'

del city[1:4]

city

# Operations

# Concate
# Multiplication
# Membership
# Iteration

city1='Pune'

city + city1

city + " " + city1

city * 3

print("Mumbai")
print("-"*50)
print("Pune")

'M' in city

'M' not in city

for i in city:
  print(i)

# String Functions

# upper/lower
# isdigit/isalpha
# capitalize/title
# join/split
# format
# index
# count
# replace

# len
# min/max
# sorted

city.upper()

city.lower()

"Mumbai".isalpha()

"1234".isdigit()

"Mumbai123".isalpha()

"raHuL SingH".capitalize()

"rahUL sinGH".title()

"Today is a beautiful day".split()

"Today is a beautiful day".split("is")

"Today is a beautiful day".split("a")

# Join

"1".join(['Today', 'is', 'a', 'beautiful', 'day'])

# index
# count
# replace
# format

"india is a great country".index("")
# remember this

"india is a great country".count("")

len("india is a great country")

"india is a great country".reverse()

L=[1,2,3,4,5]
L.reverse()

L

"india is a great country".replace("india","bharat")

sample="india is a great country"

sample.replace("india","bharat")

sample

"Hi {2} how are you {0}".format(1234,"today","Hi")

len(city)
city

min(city)

max(city)

sorted(city, reverse=True)

"MUMBAI IS ".isalpha()

min("mumbai")

"raHUL singH".title()

"hi hoW aRe You?"

"Hi How Are You?"

sample=input("Enter the string")

sample=sample.split()

sample

sample=input("Enter the string")

sample=sample.split()

new=""
for i in sample:
  new = new + " " + i[0].upper() + i[1:].lower()
  print(new)

# Lists

# 1. Create
# 2. Access
# 3. Edit
# 4. Add
# 5. Delete
# 6. Operations
# 7. Functions

# Lists

L1=[]
print(L1)
# Empty List

# Homogeneous List

L2=[1,2,3,4,5,6]
print(L2)

L3=[1,"Hello",6.5,True]
print(L3)
# Hetrogenous

# Differnce between Array and List

# 1. Lists can be hetrogenous
# 2. Dynamic sizing in Lists

# Disadvange of Python List over C array

# 1. Slower

L4=[1,2,3,4,[5,6]]
L4

L5=[[[1,2],[3,4]],[[5,6],[7,8]]]
print(L5)

len(L5)

L6=list("Mumbai")
print(L6)

# Accessing items

L2

# Indexing
# --- Positive
# --- Negative 
# Slicing

L2[-3]

L2[1:4]

L2

L2[::-1]

L4

L4[-1][-1]

L5[-1][-1][-1]

# Editing a List

L2

L2[-1]=600
L2

# Lists are mutable

L2[2:4]=[200,300]
L2

# Add new items in a List

# append
# extend
# insert

L2.append(700)
L2

L2.extend([800,900,1000])
L2

L2.extend({9,8})
L2

L2.append([15,61])
L2

L2.extend("Goa")
L2

# insert

L2.insert(2,"Helo")
L2

# Deletion

# del
# remove
# pop
# clear

L1

del L1

L1

del L2[0:3]
L2

del L2[-3:]
L2

# remove
L2.remove("Hello")
L2

# pop

L2.pop()

L2

L2.pop(1)

L2

# clear

L2.clear()
L2

L2

L2=[1,2,3,4,5]

L2[:3]

L2[:]

L2[1:4:2]

L2[::-1]

for i in range(1,10):
  break

# 1. List operations
# 2. List Functions

# 1. Concatenate
# 2. Multiply
# 3. Membership
# 4. Loops

L3=[1,2,3,4,5]

L4=[1,2,3,4,[5,6]]

L3 + L4

L3 * 3

L4

5 in L4[-2]

for i in L4:
  print(i)

# List Functions

# len
# min/max
# sum
# sorted
# count
# index
# sort

len(L3)

sum(L3)

sorted(L3,reverse=True)

L3.count(100)

L3.index(5)

L3=[23,13,11,67,10]
L3.sort()

L3

# func_name(list) # Generic
# list.func_name() # Specfic

# Object Oriented Prog


L3="Kolkata"

# [2,5,1,7,8]
# [0,1,2,3,4]

# [1,2]

L1=[2,5,1,7,8]
L2=[0,1,2,3,4]
L=[]

for i in L1:
  if i in L2:
    L.append(i)

print(L)

# Chicken, Rabbits

# 32 Legs 20 Heads

# No. of chickens/No. of rabits

"""## Tuples

- Creating
- Access
- Edit
- Add
- Delete
- Opeartions
- Functions
"""

# Creating

T1=()
T1

# Single item tuple

T2=(2,)
type(T2)
print(T2)

# Homogeneous

T3=(1,2,3,4,5,65)
T3

# hetro

T4=(1,"Hello",5+6j,True)
T4

# 2D Tuple
T5=(1,2,3,4,(5,6))
T5

# tuple

T6=tuple("Goa")
T6

# Access Items

T3

T3[::-1]

T5

T5[-1][-1]

# Edit

T3[-1]=6

# Immutable just like Strings
# Lists are mutable
# Edit No
# Add No
# Delete No
# Complete Del Yes

del T1

del T4[1:3]

# Why do tuples exist?

# Edit/Add/delete(Write operations)
# Access/Loop/Membership(Read opers)

# Tuple is read only Data Type

# Operations

T3 + T3

T3 * 3

1 in T3

for i in T3:
  print(i)

# Functions

len(T3)

min(T3)

sum(T3)

sorted(T3)

T3.reverse()

T3.index(3)

T3.count(3)

list(T3)

tuple([1,2,3])

a=4

print(a)

hex(id(a))

b=a
# aliasing
print(b)

hex(id(b))

c=b
hex(id(c))

del a

print(a)

print(b)

print(c)

del b

del c

z="Corona"
y=z
x=y

print(id(z))
print(id(y))
print(id(x))

import sys
sys.getrefcount(z)

w=x

a=1
b=a
c=b

sys.getrefcount(a)

a=2
b=a
c=b

a=257
b=a

a=-6
b=-6

# -5 to 256

print(id(a))
print(id(b))

a="india_gate"
b="india_gate"

print(id(a))
print(id(b))

L=[1,2,3]

id(L)

L.append(4)
L

id(L)

T=(1,2,3)

id(T)

T=T + (4,5)

T

id(T)

L=[1,2,3]

L1=L

print(id(L))
print(id(L1))

L1.append(4)

L1

L

L=[1,2,3,4]
L1=L[:]
# cloning

print(id(L))
print(id(L1))

L1.append(5)

L1

L

L=[1,2,3,(4,5)]

L[-1][-1]=100
L

T=(1,2,3,[4,5])
T[-1][-1]=100

T

# Last example

a=[1,2]
b=[3,4]

c=(a,b)

c

# Sets

# 1. Sets can't have duplicate items
# 2. Sets have no meaning for indexing/slicing
# 3. Sets can't have mutable data types
# 4. Set are mutable(Add, Delete)

S1={1,1,2,2,3,3,4,4}

S1

S1={}
S1

type(S1)

S1=set()
print(S1)
type(S1)

S1=set([1,2,3])
S1

# Access

S1[0:2]

# Editing

S1

# Adding new items

S1.add(8)
S1

id(S1)

S1.add(9)
print(S1)
id(S1)

# Delete

# pop(FIFO)
# remove

S1.pop()

S1

S1.remove(9)

S1

S1.remove(8)
S1

# Set operations

S1={1,2,3,4,5,6,7}
S2={4,5,6,7,8,9,10}

S1 * 3

1 in S1

for i in S1:
  print(i)

# Set Functions

S1.intersection(S2)

S1.union(S2)

S1.difference(S2)

S1.issubset(S2)

S1.issuperset(S2)

S1.isdisjoint(S2)

len(S1)

S1 - S2

S1 & S2

S1 | S2

min(S1)

sum(S1)

sorted(S1)

# Dictionary

# 1. Create
# 2. Access
# 3. Edit
# 4. Add
# 5. Delete
# 6. Operation
# 7. Functions

D1={"Name":"Pappu","Party":"Congress","Age":50}

D1

# hashing

D2={}
D2

# 1. Dictionary Mutable(Add,Delete,Edit)
# 2. Keys of a dictionary can't have a mutable data type
# 3. No indexing/slicing

D3={1:2,(2,3):"Hello"}
D3

# 2D

D4={"Name":"Rahul",
    "College":"IEM",
    "Semester":8,
    "Marks":{
        "OS":90,
        "CSA":70,
        "ML":89
    }}

# API/ JSON

D4

# Access Dictionary

D1

D1['Party']

# Edit 

D1['Age']=51

D1

# Add

# dict_name[new_key]=new_value

D1['Iq']=-3

D1

# Delete

del D1

D1

D4

del D4['Semester']

D4

# Operations
# Functions

D4 + D4

D4 * 3

D4

'IEM' in D4

'College' in D4

for i in D4:
  print(i, D4[i])

# Functions

len(D4)

min(D4)

sorted(D4)

D4.keys()

D4.values()

lyrics='''
Hi Ho Ha, Hi Ho Ha, Hi Ho Ha, ..
Aankh Mare O Ladka Aankh Mare
Aankh Mare O Ladka Aankh Mare
Sitti Bajaye, Sataye
Sitti Bajaye, Bich Sadak Pe
Hi Naam Mera Pukare Oh Karke Isare
O Ladka Aankha Mare
Aankh Mare O Ladki Aankh Mare
Aankh Mare O Ladki Aankh Mare
Dil Dhadkaye Pataye
Dil Dhadkaye, Bich Sadak Mein Nakhare Dikhaye Sare
Ho Karke Isare
Vo Ladki Aankh Mare
Aankh Mare Vo Ladka Aankha Mare
Aankh Mare Vo Ladki Aankha Mare
Hi Ho Ha, Hi Ho Ha, Hi Ho Ha, Hi Ho Ha..
Are Aage Aage Bhagu Main Ye
Pichhe Pichhe Aaye
Kuchh Na Dekhe Kuchh Na Soche
Aankhe Miche Aaye, Haye Maja Aa Jaye
Ye Gadi Ke Niche Aa Jaye
P P Pagal S S S Sadayi Di Di Deewana
Tu Ye To Bata Main Kiska Deewana
Sun Le Jara Ye Sara Jamana
Dil Dhadkaye Pataye
Dil Dhadkaye Bich Sadak Mein Nakhare Dikhaye Sare
Ho…
'''

lyrics

lyrics=lyrics.split()

lyrics

f={}

for i in lyrics:
  
  if i in f:
    # present
    f[i]=f[i]+1
  else:
    # 1st time
    f[i]=1

max(f.values())

for i in f:
  if f[i]==14:
    print(i)
    break

# Functions
# Recursion/OOP(3)
# Databases(2-3)
# GUI(1)
# Tinder(3-4)
# Advance Topics(1-2)

# Google Doc
#